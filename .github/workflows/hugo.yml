name: Release Hugo site

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: self-hosted
    env:
      HUGO_VERSION: 0.108.0
    steps:
      - name: Install snap
        run: |
          sudo apt install snapd
      - name: Install Hugo CLI
        run: |
          wget --quiet -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  create-tag:
    needs: [build]
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get latest tag
        id: latest_tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: context.github.repository
          releases-only: true

      - name: Create new tag
        id: create_tag
        uses: actions/github-script@v6
        with:
          script: |
            const { data: tag } = await github.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: `v${parseInt(steps.latest_tag.outputs.tag.slice(1)) + 1}`,
              message: `Auto-incrementing tag v${parseInt(steps.latest_tag.outputs.tag.slice(1)) + 1}`,
              object: process.env.GITHUB_SHA,
              type: 'commit'
            });
            console.log(tag);
            process.env.LATEST_TAG = tag;
            return tag;

      - name: Push new tag
        uses: actions/github-script@v6
        with:
          script: |
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${steps.create_tag.outputs.result.data.tag}`,
              sha: steps.create_tag.outputs.result.data.sha
            });

  release:
    needs: [create-tag]
    runs-on: self-hosted
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${steps.create_tag.outputs.result.data.tag}
